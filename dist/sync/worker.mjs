import{workerData as m}from"node:worker_threads";const{buffer:i,names:l,parent:f}=m,r=new Uint8Array(i,4),o=new Int32Array(i),w=new TextEncoder;let n;try{const t=(await Promise.all(l.map(e=>import.meta.resolve(e,f)))).join("\0");n=a(t,r)||NaN}catch(t){const e=JSON.stringify(t,["cause","message","name","stack"]);n=-a(e,r)}finally{Atomics.store(o,0,n),Atomics.notify(o,0)}function a(t,e){const{read:s,written:c}=w.encodeInto(t,e);if(s===t.length)return c;throw new RangeError("Too long text")}
//# sourceMappingURL=worker.mjs.map
