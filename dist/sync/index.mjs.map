{"version":3,"file":"index.mjs","sources":["../../src/sync/index.ts"],"sourcesContent":["import type { WorkerOptions } from 'node:worker_threads';\nimport type { WorkerData } from './worker';\n\nimport { Worker } from 'node:worker_threads';\nimport { createRequire } from 'node:module';\nimport { execArgv, getCallerUrl } from '#_internal';\n\nconst enum $ {\n    INDEX           = 0,\n    INT32_BYTES     = 4,\n    LEFT_SHIFT      = 10,\n    TIMEOUT_MSEC    = 1000,\n    WAIT_VALUE      = 0,    // eslint-disable-line @typescript-eslint/no-duplicate-enum-values\n}\n\nconst baseUrl = import.meta.url;\nconst decoder = new TextDecoder();\nconst require = createRequire(baseUrl);\nconst workerPath = require.resolve('#worker/sync');\n\n/**\n * Resolve a (single) module specifier.\n * @see [`import.meta.resolve`](https://nodejs.org/docs/latest/api/esm.html#importmetaresolvespecifier-parent)\n * @param specifier The module specifier to resolve relative to `parent`.\n * @param parent    The absolute parent module URL to resolve from. (@defaultValue [`import.meta.url`](https://nodejs.org/docs/latest/api/esm.html#importmetaurl))\n * @returns         A module URL string.\n */\nexport function importMetaResolve(specifier: string, parent?: string | URL): string {\n    const [result] = importMetaResolveAll([specifier], parent);\n    return result!; // eslint-disable-line @typescript-eslint/no-non-null-assertion\n}\n\n/**\n * Resolve multiple module specifiers with the same `parent`.\n * @param iterable  An iterable (such as an array) of module specifiers to resolve relative to `parent`.\n * @param parent    The absolute parent module URL to resolve from. (@defaultValue [`import.meta.url`](https://nodejs.org/docs/latest/api/esm.html#importmetaurl))\n * @returns         An array of module URL strings.\n */\nexport function importMetaResolveAll(iterable: Readonly<Iterable<string>>, parent?: string | URL): string[] {\n    const specifiers = Array.isArray(iterable) ? iterable : [...iterable];\n    const L = specifiers.length;\n    if (L < 1) {\n        return [];\n    }\n    parent ??= getCallerUrl(baseUrl);\n    let worker: Worker | undefined;\n    try {\n        const buffer = new SharedArrayBuffer((L + 1) << $.LEFT_SHIFT);\n        const int32Array = new Int32Array(buffer);\n        let unknownError: Error | undefined;\n        worker = new Worker(workerPath, {\n            execArgv,\n            workerData: { buffer, parent, specifiers } satisfies WorkerData,\n        } as WorkerOptions).once('error', e => unknownError = e);\n        Atomics.wait(int32Array, $.INDEX, $.WAIT_VALUE, $.TIMEOUT_MSEC);\n        if (unknownError) {\n            throw unknownError;\n        }\n        const byteLength = int32Array[0]!; // eslint-disable-line @typescript-eslint/no-non-null-assertion\n        const data = new Uint8Array(buffer, $.INT32_BYTES, Math.abs(byteLength));\n        const text = decoder.decode(data);\n        if (0 < byteLength) {\n            return text.split(',');\n        } else {\n            throw Object.assign(new Error(), JSON.parse(text || 'null'));\n        }\n    } finally {\n        void worker?.terminate();\n    }\n}\n"],"names":["baseUrl","decoder","require","createRequire","workerPath","importMetaResolve","specifier","parent","result","importMetaResolveAll","iterable","specifiers","L","getCallerUrl","worker","buffer","int32Array","unknownError","Worker","execArgv","e","byteLength","data","text"],"mappings":"iJAeA,MAAMA,EAAU,YAAY,IACtBC,EAAU,IAAI,YACdC,EAAUC,EAAcH,CAAO,EAC/BI,EAAaF,EAAQ,QAAQ,cAAc,EAS1C,SAASG,EAAkBC,EAAmBC,EAA+B,CAChF,KAAM,CAACC,CAAM,EAAIC,EAAqB,CAACH,CAAS,EAAGC,CAAM,EACzD,OAAOC,CACX,CAQO,SAASC,EAAqBC,EAAsCH,EAAiC,CACxG,MAAMI,EAAa,MAAM,QAAQD,CAAQ,EAAIA,EAAW,CAAC,GAAGA,CAAQ,EAC9DE,EAAID,EAAW,OACrB,GAAIC,EAAI,EACJ,MAAO,CAAC,EAEZL,IAAWM,EAAab,CAAO,EAC/B,IAAIc,EACJ,GAAI,CACA,MAAMC,EAAS,IAAI,kBAAmBH,EAAI,GAAM,EAAY,EACtDI,EAAa,IAAI,WAAWD,CAAM,EACxC,IAAIE,EAMJ,GALAH,EAAS,IAAII,EAAOd,EAAY,CAC5B,SAAAe,EACA,WAAY,CAAE,OAAAJ,EAAQ,OAAAR,EAAQ,WAAAI,CAAW,CAC7C,CAAkB,EAAE,KAAK,QAASS,GAAKH,EAAeG,CAAC,EACvD,QAAQ,KAAKJ,EAAY,EAAS,EAAc,GAAc,EAC1DC,EACA,MAAMA,EAEV,MAAMI,EAAaL,EAAW,CAAC,EACzBM,EAAO,IAAI,WAAWP,EAAQ,EAAe,KAAK,IAAIM,CAAU,CAAC,EACjEE,EAAOtB,EAAQ,OAAOqB,CAAI,EAChC,GAAI,EAAID,EACJ,OAAOE,EAAK,MAAM,GAAG,EAErB,MAAM,OAAO,OAAO,IAAI,MAAS,KAAK,MAAMA,GAAQ,MAAM,CAAC,CAEnE,QAAE,CACOT,GAAA,MAAAA,EAAQ,WACjB,CACJ"}