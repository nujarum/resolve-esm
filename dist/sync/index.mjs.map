{"version":3,"file":"index.mjs","sources":["../../src/sync/index.ts"],"sourcesContent":["import type { WorkerOptions } from 'node:worker_threads';\nimport type { WorkerData } from './worker';\n\nimport { Worker } from 'node:worker_threads';\nimport { createRequire } from 'node:module';\nimport { execArgv, getCallerUrl } from '#_internal';\n\nconst enum $ {\n    INDEX           = 0,\n    INT32_BYTES     = 4,\n    LEFT_SHIFT      = 10,\n    TIMEOUT_MSEC    = 1000,\n    WAIT_VALUE      = 0,    // eslint-disable-line @typescript-eslint/no-duplicate-enum-values\n}\n\nconst baseUrl = import.meta.url;\nconst require = createRequire(baseUrl);\nconst textDecoder = new TextDecoder();\nconst workerPath = require.resolve('#worker/sync');\n\n/**\n * Resolve a (single) module specifier.\n * @see [`import.meta.resolve`](https://nodejs.org/docs/latest/api/esm.html#importmetaresolvespecifier-parent)\n * @param specifier The module specifier to resolve relative to `parent`.\n * @param parent    The absolute parent module URL to resolve from. (@defaultValue [`import.meta.url`](https://nodejs.org/docs/latest/api/esm.html#importmetaurl))\n * @returns         A module URL string.\n */\nexport function importMetaResolve(specifier: string, parent?: string | URL): string {\n    const [result] = importMetaResolveAll([specifier], parent);\n    return result!;\n}\n\n/**\n * Resolve multiple module specifiers with the same `parent`.\n * @param iterable  An iterable (such as an array) of module specifiers to resolve relative to `parent`.\n * @param parent    The absolute parent module URL to resolve from. (@defaultValue [`import.meta.url`](https://nodejs.org/docs/latest/api/esm.html#importmetaurl))\n * @returns         An array of module URL strings.\n */\nexport function importMetaResolveAll(iterable: Readonly<Iterable<string>>, parent?: string | URL): string[] {\n    const sources = Array.isArray(iterable) ? iterable as string[] : [...iterable];\n    const L = sources.length;\n    if (L < 1) {\n        return [];\n    }\n    const names = [...new Set(sources)]; // dedupe\n    parent ??= getCallerUrl(baseUrl);\n    let worker: Worker | undefined;\n    try {\n        const buffer = new SharedArrayBuffer((L + 1) << $.LEFT_SHIFT);\n        const int32Array = new Int32Array(buffer);\n        let unknownError: Error | undefined;\n        worker = new Worker(workerPath, {\n            execArgv,\n            workerData: { buffer, names, parent } satisfies WorkerData,\n        } as WorkerOptions).once('error', e => unknownError = e);\n        Atomics.wait(int32Array, $.INDEX, $.WAIT_VALUE, $.TIMEOUT_MSEC);\n        if (unknownError) {\n            throw unknownError;\n        }\n        const byteLength = int32Array[0]!;\n        const data = new Uint8Array(buffer, $.INT32_BYTES, Math.abs(byteLength));\n        const text = textDecoder.decode(data);\n        if (!(0 < byteLength)) {\n            throw Object.assign(new Error(), JSON.parse(text || 'null'));\n        }\n        const results = text.split('\\0');\n        const urlMap = names.reduce((obj, name, i) => {\n            obj[name] = results[i]!;\n            return obj;\n        }, Object.create(null) as Record<string, string>);\n        return sources.map(name => urlMap[name]!);\n    } finally {\n        void worker?.terminate();\n    }\n}\n"],"names":["baseUrl","require","createRequire","textDecoder","workerPath","importMetaResolve","specifier","parent","result","importMetaResolveAll","iterable","sources","L","names","getCallerUrl","worker","buffer","int32Array","unknownError","Worker","execArgv","e","byteLength","data","text","results","urlMap","obj","name","i"],"mappings":"iJAeA,MAAMA,EAAU,YAAY,IACtBC,EAAUC,EAAcF,CAAO,EAC/BG,EAAc,IAAI,YAClBC,EAAaH,EAAQ,QAAQ,cAAc,EAS1C,SAASI,EAAkBC,EAAmBC,EAA+B,CAChF,KAAM,CAACC,CAAM,EAAIC,EAAqB,CAACH,CAAS,EAAGC,CAAM,EACzD,OAAOC,CACX,CAQO,SAASC,EAAqBC,EAAsCH,EAAiC,CACxG,MAAMI,EAAU,MAAM,QAAQD,CAAQ,EAAIA,EAAuB,CAAC,GAAGA,CAAQ,EACvEE,EAAID,EAAQ,OAClB,GAAIC,EAAI,EACJ,MAAO,CAAA,EAEX,MAAMC,EAAQ,CAAC,GAAG,IAAI,IAAIF,CAAO,CAAC,EAClCJ,IAAWO,EAAad,CAAO,EAC/B,IAAIe,EACJ,GAAI,CACA,MAAMC,EAAS,IAAI,kBAAmBJ,EAAI,GAAM,EAAY,EACtDK,EAAa,IAAI,WAAWD,CAAM,EACxC,IAAIE,EAMJ,GALAH,EAAS,IAAII,EAAOf,EAAY,CAC5B,SAAAgB,EACA,WAAY,CAAE,OAAAJ,EAAQ,MAAAH,EAAO,OAAAN,CAAO,CACxC,CAAkB,EAAE,KAAK,QAASc,GAAKH,EAAeG,CAAC,EACvD,QAAQ,KAAKJ,EAAY,EAAS,EAAc,GAAc,EAC1DC,EACA,MAAMA,EAEV,MAAMI,EAAaL,EAAW,CAAC,EACzBM,EAAO,IAAI,WAAWP,EAAQ,EAAe,KAAK,IAAIM,CAAU,CAAC,EACjEE,EAAOrB,EAAY,OAAOoB,CAAI,EACpC,GAAI,EAAE,EAAID,GACN,MAAM,OAAO,OAAO,IAAI,MAAS,KAAK,MAAME,GAAQ,MAAM,CAAC,EAE/D,MAAMC,EAAUD,EAAK,MAAM,IAAI,EACzBE,EAASb,EAAM,OAAO,CAACc,EAAKC,EAAMC,KACpCF,EAAIC,CAAI,EAAIH,EAAQI,CAAC,EACdF,GACR,OAAO,OAAO,IAAI,CAA2B,EAChD,OAAOhB,EAAQ,IAAIiB,GAAQF,EAAOE,CAAI,CAAE,CAC5C,QAAA,CACSb,GAAA,MAAAA,EAAQ,WACjB,CACJ"}