{"version":3,"file":"worker.mjs","sources":["../../src/sync/worker.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport { workerData } from 'node:worker_threads';\n\nexport interface WorkerData {\n    readonly buffer: SharedArrayBuffer;\n    readonly parent?: string | URL | undefined;\n    readonly specifiers: readonly string[];\n}\n\nconst enum $ {\n    INDEX       = 0,\n    INT32_BYTES = 4,\n}\n\nconst encoder = new TextEncoder();\nconst errorPropertyNames = Object.freeze([\n    'cause',\n    'message',\n    'name',\n    'stack',\n] as const satisfies readonly (keyof Error)[]);\n\nconst { buffer, parent, specifiers } = workerData as WorkerData;\nconst destination = new Uint8Array(buffer, $.INT32_BYTES);\nconst int32Array = new Int32Array(buffer);\ntry {\n    const results = await Promise.all(specifiers.map(specifier => import.meta.resolve!(specifier, parent)));\n    const text = results.join(',');\n    const written = encode(text, destination);\n    Atomics.store(int32Array, $.INDEX, written || NaN);\n    Atomics.notify(int32Array, $.INDEX);\n} catch (e) {\n    const text = JSON.stringify(e, errorPropertyNames as unknown as string[]);\n    const written = encode(text, destination);\n    Atomics.store(int32Array, $.INDEX, -written);\n    Atomics.notify(int32Array, $.INDEX);\n}\n\nfunction encode(text: string, destination: Uint8Array) {\n    const { read, written } = encoder.encodeInto(text, destination);\n    if (read === text.length) {\n        return written;\n    } else {\n        throw new RangeError('Too long text');\n    }\n}\n"],"names":["encoder","errorPropertyNames","buffer","parent","specifiers","workerData","destination","int32Array","text","specifier","written","encode","e","read"],"mappings":"iDAeA,MAAMA,EAAU,IAAI,YACdC,EAAqB,OAAO,OAAO,CACrC,QACA,UACA,OACA,OACJ,CAA6C,EAEvC,CAAE,OAAAC,EAAQ,OAAAC,EAAQ,WAAAC,CAAW,EAAIC,EACjCC,EAAc,IAAI,WAAWJ,EAAQ,CAAa,EAClDK,EAAa,IAAI,WAAWL,CAAM,EACxC,GAAI,CAEA,MAAMM,GADU,MAAM,QAAQ,IAAIJ,EAAW,IAAIK,GAAa,YAAY,QAASA,EAAWN,CAAM,CAAC,CAAC,GACjF,KAAK,GAAG,EACvBO,EAAUC,EAAOH,EAAMF,CAAW,EACxC,QAAQ,MAAMC,EAAY,EAASG,GAAW,GAAG,EACjD,QAAQ,OAAOH,EAAY,CAAO,CACtC,OAASK,EAAG,CACR,MAAMJ,EAAO,KAAK,UAAUI,EAAGX,CAAyC,EAClES,EAAUC,EAAOH,EAAMF,CAAW,EACxC,QAAQ,MAAMC,EAAY,EAAS,CAACG,CAAO,EAC3C,QAAQ,OAAOH,EAAY,CAAO,CACtC,CAEA,SAASI,EAAOH,EAAcF,EAAyB,CACnD,KAAM,CAAE,KAAAO,EAAM,QAAAH,CAAQ,EAAIV,EAAQ,WAAWQ,EAAMF,CAAW,EAC9D,GAAIO,IAASL,EAAK,OACd,OAAOE,EAEP,MAAM,IAAI,WAAW,eAAe,CAE5C"}