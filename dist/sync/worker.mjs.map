{"version":3,"file":"worker.mjs","sources":["../../src/sync/worker.ts"],"sourcesContent":["import { workerData } from 'node:worker_threads';\n\nexport interface WorkerData {\n    readonly buffer: SharedArrayBuffer;\n    readonly names: readonly string[];\n    readonly parent?: string | URL | undefined;\n}\n\nconst enum $ {\n    INDEX       = 0,\n    INT32_BYTES = 4,\n}\n\nconst { buffer, names, parent } = workerData as WorkerData;\nconst destination = new Uint8Array(buffer, $.INT32_BYTES);\nconst int32Array = new Int32Array(buffer);\nconst textEncoder = new TextEncoder();\n\nlet value: number | undefined;\ntry {\n    const results = await Promise.all(names.map(name => import.meta.resolve!(name, parent)));\n    const text = results.join('\\0');\n    value = encode(text, destination) || NaN;\n} catch (e) {\n    const text = JSON.stringify(e, ['cause', 'message', 'name', 'stack'] satisfies (keyof Error)[]);\n    value = -encode(text, destination);\n} finally {\n    Atomics.store(int32Array, $.INDEX, value!);\n    Atomics.notify(int32Array, $.INDEX);\n}\n\nfunction encode(text: string, destination: Uint8Array) {\n    const { read, written } = textEncoder.encodeInto(text, destination);\n    if (read === text.length) {\n        return written;\n    } else {\n        throw new RangeError('Too long text');\n    }\n}\n"],"names":["buffer","names","parent","workerData","destination","int32Array","textEncoder","value","text","name","encode","e","read","written"],"mappings":"iDAaA,KAAM,CAAE,OAAAA,EAAQ,MAAAC,EAAO,OAAAC,CAAO,EAAIC,EAC5BC,EAAc,IAAI,WAAWJ,EAAQ,CAAa,EAClDK,EAAa,IAAI,WAAWL,CAAM,EAClCM,EAAc,IAAI,YAExB,IAAIC,EACJ,GAAI,CAEA,MAAMC,GADU,MAAM,QAAQ,IAAIP,EAAM,IAAIQ,GAAQ,YAAY,QAASA,EAAMP,CAAM,CAAC,CAAC,GAClE,KAAK,IAAI,EAC9BK,EAAQG,EAAOF,EAAMJ,CAAW,GAAK,GACzC,OAASO,EAAG,CACR,MAAMH,EAAO,KAAK,UAAUG,EAAG,CAAC,QAAS,UAAW,OAAQ,OAAO,CAA2B,EAC9FJ,EAAQ,CAACG,EAAOF,EAAMJ,CAAW,CACrC,QAAE,CACE,QAAQ,MAAMC,EAAY,EAASE,CAAM,EACzC,QAAQ,OAAOF,EAAY,CAAO,CACtC,CAEA,SAASK,EAAOF,EAAcJ,EAAyB,CACnD,KAAM,CAAE,KAAAQ,EAAM,QAAAC,CAAQ,EAAIP,EAAY,WAAWE,EAAMJ,CAAW,EAClE,GAAIQ,IAASJ,EAAK,OACd,OAAOK,EAEP,MAAM,IAAI,WAAW,eAAe,CAE5C"}